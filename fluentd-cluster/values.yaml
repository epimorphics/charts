# Default values for fluentd-cluster.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: 173681544495.dkr.ecr.eu-west-1.amazonaws.com/fluent/fluentd
  tag: v1.4.2
  pullPolicy: IfNotPresent

fluentd:
  envFrom: []
  #- secretRef:
  #    name: aws-secrets
  environment: []
  #- name: "S3_BUCKET_NAME"
  #  value: epi-ops 
  #- name: "S3_PATH"
  #  value: test/fluentd-cluster/
  #- name: "S3_BUCKET_REGION"
  #  value: eu-west-1
  config: |
    <source>
      @type tail
      @id in_tail_container_logs
      path /var/log/containers/*.log
      pos_file /var/log/fluentd-containers.log.pos
      tag kubernetes.*
      read_from_head true
      <parse>
        @type json
        time_format %Y-%m-%dT%H:%M:%S.%NZ
      </parse>
    </source>
    <filter kubernetes.**>
      @type kubernetes_metadata
      @id filter_kube_metadata
    </filter>
    <filter kubernetes.**>
      @type grep
      <regexp>
        key $.kubernetes.labels.fluentd
        pattern true
      </regexp>
      <regexp>
        key $.kubernetes.labels.fluentd-app
        pattern /^(.+)$/
      </regexp>
    </filter>
    <filter kubernetes.**>
      @type record_transformer
      enable_ruby true
      <record>
        namespace_name ${record["kubernetes"]["namespace_name"]}
        app ${record["kubernetes"]["labels"]["fluentd-app"]}
      </record>
    </filter>
    <match kubernetes.**>
      @type s3
      @id out_s3
      @log_level info

      aws_key_id "#{ENV['AWS_ACCESS_KEY_ID']}"
      aws_sec_key "#{ENV['AWS_SECRET_ACCESS_KEY']}"
      s3_bucket "#{ENV['S3_BUCKET_NAME']}"
      s3_region "#{ENV['S3_BUCKET_REGION']}"
      path "#{ENV['S3_PATH']}"
      s3_object_key_format %{path}${namespace_name}/${app}/%{time_slice}_%{index}.%{file_extension}

      <inject>
        time_key time
        tag_key tag
        localtime false
      </inject>
      <buffer tag,time,app,namespace_name>
        @type file
        path /var/log/s3
        flush_at_shutdown true
        timekey 3600
        timekey_use_utc true
        chunk_limit_size 256m
      </buffer>
    </match>

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
